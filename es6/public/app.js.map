{"version":3,"file":"app.js","sources":["../src/api.js","../src/search.js","../src/utils.js","../src/photo.js","../src/thumbs.js","../src/config.js","../src/app.js"],"sourcesContent":["// Check that the server has returned a 200 status\n// (Unlike $.ajax, fetch doesn't treat error messages from the server as failed responses)\nconst checkRes = response => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n};\n\nclass API {\n  constructor(config, onLoadCallback) {\n    this.config = config;\n    this.onLoadCallback = onLoadCallback;\n    this.fetchCityWeatherImages = this.fetchCityWeatherImages.bind(this);\n  }\n\n  // Step 2/4: Load weather data for the given city\n  fetchCityWeather(query) {\n    const { key, url } = this.config.weather;\n    const endpoint = `${url}?q=${query}&appid=${key}`;\n\n    return fetch(endpoint)\n      .then(checkRes)\n      .then(res => res.json());\n  }\n\n  // Step 3/4: Load derived data (images that match the weather description)\n  fetchCityWeatherImages(json) {\n    const { key, url } = this.config.unsplash;\n    const term = json.weather[0].description;\n    const endpoint = `${url}?query=${term}&client_id=${key}`;\n\n    return fetch(endpoint)\n      .then(checkRes)\n      .then(res => res.json())\n      .then(data => ({ term, images: data.results }));\n  }\n\n  // Step 1/4: Initialise data loading\n  load(query) {\n    this.fetchCityWeather(query)\n      .then(this.fetchCityWeatherImages)\n      .then(this.onLoadCallback)\n      .catch(err => {\n        console.log(\"getCityWeather:\", err);\n      });\n  }\n}\n\nexport default API;\n","class Search {\n  constructor(id, city, loadWeatherImages) {\n    this.$el = document.querySelector(id);\n    this.$tf = this.$el.querySelector(\"input\");\n\n    this.$el.term.value = city;\n    this.$tf.addEventListener(\"focus\", () => (this.$tf.value = \"\"));\n    this.$el.addEventListener(\"submit\", this.onSubmit(loadWeatherImages));\n  }\n\n  onSubmit(loadWeatherImages) {\n    return (e) => {\n      e.preventDefault();\n  \n      // Only search when the term is valid\n      const term = this.$el.term.value;\n      if (term.length) {\n        loadWeatherImages(term);\n      }\n    }\n  }\n}\n\nexport default Search;","export const clearChildren = (parent) => {\n  Array.from(parent.children).forEach(el => parent.removeChild(el));\n}","import { clearChildren } from \"./utils.js\";\n\nclass Photo {\n  constructor(id) {\n    this.$el = document.querySelector(id);\n\n    this.display = this.display.bind(this);\n  }\n\n  // Clear the main image and load the supplied url\n  // Only mount the image once the file has loaded to let it fade in nicely\n  update(url, alt) {\n    clearChildren(this.$el);\n\n    const img = document.createElement(\"img\");\n    img.addEventListener(\"load\", () => {\n      // Take care of any async overruns (ghetto but effective!)\n      clearChildren(this.$el);\n      this.$el.appendChild(img);\n    });\n    img.src = url;\n    img.alt = alt;\n  }\n\n  // Update the main UI\n  display(term, imageUrl, description) {\n    console.log(\"imageUrl\", imageUrl)\n\n    this.update(imageUrl, description || term);\n  }\n}\n\nexport default Photo;","import { clearChildren } from \"./utils.js\";\n\nclass Thumbs {\n  constructor(id, utm, displayMain) {\n    this.$el = document.querySelector(id);\n    this.utm = utm;\n\n    this.displayMain = displayMain;\n    this.onLinkClick = this.onLinkClick.bind(this);\n  }\n\n  createThumb(parent, src, alt) {\n    const img = document.createElement(\"img\");\n    img.src = src;\n    img.alt = alt;\n    img.className = \"thumbs__thumb\";\n    img.addEventListener(\"load\", () => parent.appendChild(img));\n  }\n\n  onLinkClick(image) {\n    return e => {\n      e.preventDefault();\n      this.displayMain(image);\n    };\n  }\n\n  display(term, images) {\n    clearChildren(this.$el);\n\n    // We could use createDocumentFragment and event Delegation for perf\n    // improvements... but for simplicity we append children directly to this.$els.thumbs\n    // and add click event handlers directly\n    images.forEach((image, index) => {\n      const url = image.links.html;\n      const alt = image.description || term;\n      const thumbUrl = image.urls.thumb;\n\n      const anchor = document.createElement(\"a\");\n      anchor.href = `${url}?${this.utm}`;\n      anchor.className = \"thumbs__link\";\n      anchor.addEventListener(\"click\", this.onLinkClick(images[index]));\n\n      this.createThumb(anchor, thumbUrl, alt);\n\n      this.$el.appendChild(anchor);\n    });\n  }\n}\n\nexport default Thumbs;\n","const getConfig = ({ weather, unsplash }) => {\n  return {\n    weather: {\n      key: weather.apiKey,\n      city: weather.city,\n      url: \"https://api.openweathermap.org/data/2.5/weather\"\n    },\n    unsplash: {\n      key: unsplash.apiKey,\n      utm: `utm_source=${unsplash.appName}&utm_medium=referral&utm_campaign=api-credit`,\n      url: \"https://api.unsplash.com/search/photos\"\n    }\n  };\n};\n\nexport default getConfig;\n","import API from \"./api\";\nimport Search from \"./search\";\nimport Photo from \"./photo\";\nimport Thumbs from \"./thumbs\";\nimport getConfig from \"./config\";\n\nclass App {\n  constructor(userConfig) {\n    // Merge user-supplied values (api keys, etc.) into config\n    this.config = getConfig(userConfig);\n\n    const { city } = this.config.weather;\n    const { utm } = this.config.unsplash;\n\n    // Cache references to DOM elements\n    this.$els = {\n      body: document.querySelector(\"body\"),\n      creditUser: document.querySelector(\"#credit-user\"),\n      creditPlatform: document.querySelector(\"#credit-platform\")\n    };\n\n    // Bind callbacks as ncessary\n    this.loadWeatherImages = this.loadWeatherImages.bind(this);\n    this.onWeatherImagesLoaded = this.onWeatherImagesLoaded.bind(this);\n    this.onThumbClick = this.onThumbClick.bind(this);\n\n    this.api = new API(this.config, this.onWeatherImagesLoaded);\n    this.photo = new Photo(\"#photo\");\n    this.thumbs = new Thumbs(\"#thumbs\", utm, this.onThumbClick);\n    this.search = new Search(\"#search\", city, this.loadWeatherImages);\n\n    // Autoload default query images\n    this.initPlatformCredits(utm);\n    this.loadWeatherImages(city);\n  }\n\n  loadWeatherImages(city) {\n    this.api.load(city);\n  }\n\n  onWeatherImagesLoaded({ term, images }) {\n    this.currentTerm = term;\n    this.thumbs.display(this.currentTerm, images);\n    this.onThumbClick(images[0]);\n  }\n\n  onThumbClick(image) {\n    const { user, urls, color, description } = image;\n\n    this.photo.display(this.currentTerm, urls.regular, description);\n    this.updateUserCredit(this.currentTerm, user);\n    this.$els.body.style[\"backgroundColor\"] = color;\n  }\n\n  // INITIALISE\n  initPlatformCredits(utm) {\n    this.$els.creditPlatform.href = `https://unsplash.com/?${utm}`;\n  }\n\n  updateUserCredit(term, user) {\n    this.$els.creditUser.href = `${user.links.html}?${this.utm}`;\n    this.$els.creditUser.innerText = `\"${term}\" by ${user.name}`;\n  }\n}\n\nexport default App;\n"],"names":["const","checkRes","response","ok","Error","statusText","API","config","onLoadCallback","this","fetchCityWeatherImages","bind","fetchCityWeather","query","weather","key","endpoint","fetch","then","res","json","unsplash","url","term","description","data","images","results","load","catch","err","console","log","Search","id","city","loadWeatherImages","$el","document","querySelector","$tf","value","addEventListener","onSubmit","e","preventDefault","length","clearChildren","parent","Array","from","children","forEach","el","removeChild","Photo","display","update","alt","img","createElement","this$1","appendChild","src","imageUrl","Thumbs","utm","displayMain","onLinkClick","createThumb","className","image","index","links","html","thumbUrl","urls","thumb","anchor","href","getConfig","ref","apiKey","App","userConfig","$els","body","creditUser","creditPlatform","onWeatherImagesLoaded","onThumbClick","api","photo","thumbs","search","initPlatformCredits","currentTerm","user","color","regular","updateUserCredit","style","innerText"],"mappings":"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"}